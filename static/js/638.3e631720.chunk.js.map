{"version":3,"file":"static/js/638.3e631720.chunk.js","mappings":"qLAmCA,UA5BmB,SAAHA,GAA+B,IAA1BC,EAASD,EAATC,UAAWC,EAAQF,EAARE,SACjBC,GAAMC,EAAAA,EAAAA,MAAND,GACPE,GAAwBC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAAkEC,EAAAA,EAAAA,KAA3DC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAUJ,EAAVI,WAAYC,EAAOL,EAAPK,QAASC,EAAUN,EAAVM,YAEpDC,EAAAA,EAAAA,YAAU,WACNC,GAEJ,GAAG,CAAChB,IAEJ,IAAMgB,EAAa,WACfJ,IAEa,UAAbb,EAAuBW,EAASV,GAAIiB,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,YAAY,IAAIH,EAAaX,GAAIiB,KAAKC,GAAcD,MAAK,kBAAMH,EAAW,YAAY,GACvK,EAEMI,EAAe,SAACZ,GAClBC,EAAQD,EACZ,EAEA,OACIa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,KACTC,EAAAA,EAAAA,GAAWX,EAASf,EAAWQ,KAGhD,C,wFCdA,EAjBiB,WACb,OACIa,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,KAAGG,UAAU,eAAcJ,SAAC,kDAC5BF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,WAAUJ,SAAA,EACrBF,EAAAA,EAAAA,MAAA,OAAKM,UAAU,yBAAwBJ,SAAA,EACnCC,EAAAA,EAAAA,KAAA,OAAKG,UAAU,4BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,6BAEnBH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,2BACfH,EAAAA,EAAAA,KAAA,OAAKG,UAAU,+BAI/B,ECGA,EAfmB,SAACZ,EAASf,EAAYQ,GACrC,OAAOO,GACH,IAAK,UACD,OAAOS,EAAAA,EAAAA,KAACI,EAAQ,IACpB,IAAK,UACD,OAAOJ,EAAAA,EAAAA,KAACK,EAAAA,EAAO,IACnB,IAAK,YACD,OAAQL,EAAAA,EAAAA,KAACxB,EAAS,CAACQ,KAAMA,IAC7B,IAAK,QACD,OAAOgB,EAAAA,EAAAA,KAACM,EAAAA,EAAY,IACxB,QACI,MAAM,IAAIC,MAAM,4BAE5B,C","sources":["components/pages/SinglePage.js","components/skeleton/Skeleton.js","utils/setContent.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport setContent from '../../utils/setContent';\n\nimport useMarvelService from '../../services/MarvelService';\nimport AppBanner from \"../appBanner/AppBanner\";\n\nconst SinglePage = ({Component, dataType}) => {\n        const {id} = useParams();\n        const [data, setData] = useState(null);\n        const {getComic, getCharacter, clearError, process, setProcess} = useMarvelService();\n\n        useEffect(() => {\n            updateData()\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [id])\n\n        const updateData = () => {\n            clearError();\n\n            dataType === 'comic' ? getComic(id).then(onDataLoaded).then(() => setProcess('confirmed')) : getCharacter(id).then(onDataLoaded).then(() => setProcess('confirmed'));\n        }\n\n        const onDataLoaded = (data) => {\n            setData(data);\n        }\n\n        return (\n            <>\n                <AppBanner/>\n                {setContent(process, Component, data)}\n            </>\n        )\n}\n\nexport default SinglePage;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Spinner from '../components/spinner/Spinner';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Skeleton from '../components/skeleton/Skeleton';\n\n\nconst setContent = (process, Component , data) => {\n    switch(process){\n        case 'waiting':\n            return <Skeleton/>;\n        case 'loading': \n            return <Spinner/>;\n        case 'confirmed': \n            return  <Component data={data}/>;\n        case 'error': \n            return <ErrorMessage/>;\n        default: \n            throw new Error('Unexpected process state');\n    }\n}\n\nexport default setContent;"],"names":["_ref","Component","dataType","id","useParams","_useState","useState","_useState2","_slicedToArray","data","setData","_useMarvelService","useMarvelService","getComic","getCharacter","clearError","process","setProcess","useEffect","updateData","then","onDataLoaded","_jsxs","_Fragment","children","_jsx","AppBanner","setContent","className","Skeleton","Spinner","ErrorMessage","Error"],"sourceRoot":""}